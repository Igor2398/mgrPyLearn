<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="./account-styles.css" />
    <link rel="stylesheet" type="text/css" href="./universal.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <!-- <script src="./topbar.js" type="text/javascript" defer></script> -->
    <script src="/components/topbar.js" type="text/javascript" defer></script>
    <title>Co dalej?</title>
</head>
<body>

<topbar-component challanges = <%= challangesCounter %> games = <%= gamesCounter %>></topbar-component>

<article id="factt">
    <h1 style="color: #7343ac;">Skończyłem wszystko i co dalej? </h1>
    <p>Gratuluję ukończnia wszystkich rozdziałów, mam nadzieję, że przygoda z Pythonem Ci się spodobała :) Jeśli tak to poniżej przedstawiam możliwe dalsze ścieżki rozwoju w tym języku </p>

    <p>Na początek możesz rzucić okiem na roadmapę dla Python Developerów pod tym <a href="https://roadmap.sh/python" target="_blank" rel="noopener noreferrer">adresem</a>. My zakończyliśmy na pierwszym żółtym prostokącie "Learn the Basics". W celu kontynuacji powinieneś obrać odpowiednią dla siebie drogę przedstawioną na mapie, ponieważ pokazuje ona w jakiej kolejności powinno się uczyć nowych rzeczy.</p>
    <p>Na forum programistów Python na portalu <a href="https://www.reddit.com/r/Python/">Reddit-Python</a> można uzyskać szybką pomoc w razie błędów w kodzie, lub pochwalić się własnym projektem, aby inni mogli na niego spojrzeć i powiezieć nam co można w nim ulepszyć. Zachęcam również, aby spróbować swoich sił w różnego rodzaju zadaniach algorytmicznych na portalu <a href="https://www.hackerrank.com ">HackerRank</a>. Pomagają one w utrwaleniu dotychczas zdobytej wiedzy, składni języka, a ponadto rozwijają nasze umiejętności w rozwiązywaniu prolemów programistycznych.</p>
    


    <h2> Sztuczna Inteligencja </h2>
    <p>
        Nieodłączną cechą sztucznej inteligencji jest umiejętność uczenia maszynowego. Proces ten polega na automatycznym ulepszaniu algorytmów maszyny, poprzez przetwarzanie zebranych danych. 
        Jednym z elementów uczenia się maszyn jest uczenie głębokie (deep learning), oparte na samodzielnym tworzeniu przez system sztucznych sieci neuronowych. 
        Gromadzone w ten sposób doświadczenie pozwala na prognozowanie wydarzeń i podejmowanie decyzji, bez zaprogramowania ich przez człowieka.
        Samouczenie maszyn jest obecnie jedną z najprężniej rozwijających się nauk komputerowych. System sztucznej inteligencji, aby móc samodzielnie się rozwijać, musi najpierw 
        zostać odpowiednio zaprojektowany. Niezwykle rozbudowane algorytmy działania są najczęściej opracowywane w języku Python. 
        Czym na tle innych wyróżnia się ten język programowania, że jest tak odpowiedni do projektowania systemów AI?

    </p>
    <p>
        Biblioteka to zbiór gotowych funkcji, które mogą zostać zaimplementowane w kodzie. Dostępne w środowisku Python pakiety pozwalają na obsługę różnorodnych danych, 
        co jest kluczowe w zwiększaniu możliwości uczenia się maszyn - im więcej informacji z różnych źródeł zostaje zebranych, przetworzonych i uporządkowanych, 
        tym lepszy jest rozwój sztucznej inteligencji. Rozbudowane zasoby bibliotek pozwalają na wykorzystanie Pythona do tworzenia aplikacji, o zastosowaniu w różnych branżach, 
        co świadczy o jego uniwersalności.
    </p>

    <h3>Jak zacząć?</h3>
    <p>Poniżej przedstawiam kilka przykładowych źródeł na dobry początek</p>
    <ul>
        <li><a href="https://www.youtube.com/watch?v=ujTCoH21GlA&list=PLzMcBGfZo4-mP7qA9cagf68V06sko5otr" target="_blank" rel="noopener noreferrer">Kanał Tech With Tim </a> </li>
        <li><a href="https://www.udemy.com/course/deeplearning_x/" target="_blank" rel="noopener noreferrer">Kurs AI na platformie Udemy</a></li>
    </ul>
    <h2> Web Dev </h2>
    <p>
        Jedna z opcji to ścieżka związana z projektowaniem aplikacji webowych, czyli Web Developer. Python jest świetnym językiem do tworzenia w pełni wydajnych aplikacji działających po stronie serwera. Jeśli zastanawiałeś się, do czego może przydać Ci się znajomość MySQL i relacyjnych baz danych, to właśnie do budowania aplikacji back-endowych.

        Jeśli zdecydujesz się na rozwój w tym kierunku, z pomocą przyjdą Ci dwa frameworki Pythona, używane do projektowania aplikacji – Django i Fiask. Pierwszy z nich zawiera mechanizmy do zarządzania bazami danych, własne szablony czy mechanizm do stworzenia łatwego w obsłudze panelu administracyjnego. Fiask jest minimalistycznym framweworkiem (aby stworzyć prostą stronę, wystarczy wpisać zaledwie kilka linijek kodu), który jednak wymaga dodatkowego uzupełnienia ze strony wtyczek lub ręcznego kodu.

        Czego potrzebujesz do rozpoczęcia pracy jako Web Developer? Nie zaszkodzi znajomość HTML oraz CSS, a także Javy Scriptu, który przydaje się w full-stackowych projektach.

    </p>

    <h3>Jak zacząć?</h3>
    <p>Poniżej przedstawiam kilka przykładowych źródeł na dobry początek</p>
    <ul>
        <li><a href="https://www.youtube.com/watch?v=sm1mokevMWk" target="_blank" rel="noopener noreferrer">Kanał Tech With Tim - pełny kurs Django</a> </li>
        <li><a href="https://www.djangoproject.com/start/" target="_blank" rel="noopener noreferrer">Wprowadzenie do Django - Oficjalna Dokumentacja</a></li>
        <li><a href="https://www.youtube.com/watch?v=Jq87JwsbG_E" target="_blank" rel="noopener noreferrer">Kurs JavaScript</a></li>
        <li><a href="https://www.youtube.com/watch?v=opNgrPv3Qw8" target="_blank" rel="noopener noreferrer">Wprowadzenie do HTML i CSS</a></li>
    </ul>

</article>

</body>
</html>